/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package aoc;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

public class App {
    private final List<String> input;

    public App(List<String> input) {
        this.input = input;
    }


    List<Integer> getSums(){
        int sum = 0;
        List<Integer> sums = new ArrayList<>();
        for(String s : input){
            if(s.isBlank()){
                sums.add(sum);
                sum = 0;
            }else{
                sum = Integer.parseInt(s) + sum;
            }
        }
        return sums;
    }

    public Integer getSolutionPart1() {
        return Collections.max(getSums());
    }

    public Integer getSolutionPart2() {
        var sums = getSums();
        Collections.sort(sums);
        int listSize = sums.size();
        var lastThree = sums.subList(listSize -3, listSize);
        return lastThree.stream().mapToInt(Integer::intValue).sum();
    }

    public static void main(String[] args) throws IOException {
        List<String> input = parseInput("input.txt");
        String part = System.getenv("part") == null ? "part1" : System.getenv("part");
        if (part.equals("part2"))
            System.out.println(new App(input).getSolutionPart2());
        else
            System.out.println(new App(input).getSolutionPart1());
    }
    private static List<String> parseInput(String filename) throws IOException {
        return Files.lines(Path.of(filename))
                .collect(Collectors.toList());
    }
}